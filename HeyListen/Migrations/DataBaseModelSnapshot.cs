// <auto-generated />
using HeyListen;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace HeyListen.Migrations
{
    [DbContext(typeof(DataBase))]
    partial class DataBaseModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HeyListen.Models.Channel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CurrentDjID");

                    b.Property<string>("DiscordId");

                    b.HasKey("ID");

                    b.HasIndex("CurrentDjID");

                    b.ToTable("Channels");
                });

            modelBuilder.Entity("HeyListen.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("AllowPlaybackControl");

                    b.Property<bool>("AllowPlaylistControl");

                    b.Property<string>("DiscordId");

                    b.Property<string>("Playlist");

                    b.Property<string>("RefreshToken");

                    b.Property<string>("SpotifyToken");

                    b.Property<DateTime>("TokenExpires");

                    b.HasKey("ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("HeyListen.Models.Channel", b =>
                {
                    b.HasOne("HeyListen.Models.User", "CurrentDj")
                        .WithMany()
                        .HasForeignKey("CurrentDjID");
                });
#pragma warning restore 612, 618
        }
    }
}
